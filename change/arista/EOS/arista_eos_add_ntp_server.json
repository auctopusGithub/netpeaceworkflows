{
  "name": "arista_eos_add_ntp_server",
  "description": [
    {
      "name": "changeNumber",
      "type": "String",
      "label": "Change Number"
    },
    {
      "name": "ntp_ip",
      "type": "String",
      "label": "NTP server"
    }
  ],
  "workflow_data": {
    "edges": [
      {
        "id": "f4284967-971f-4c7c-828e-70479f52c9ac",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "start",
        "target": "127a1d0e-215a-4dcf-b967-6932d749ad6b",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "start-end",
        "targetHandle": "target"
      },
      {
        "id": "7228aaad-5fa8-4c1b-b7b4-7777ab236b3c",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "127a1d0e-215a-4dcf-b967-6932d749ad6b",
        "target": "0ded2e91-6c7a-4b3d-93e2-3d5d214ba616",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "754feec2-0560-4a98-aefe-833fa3ae9e44",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "c8cd6f23-395c-42f0-9785-1a6a67e804b0",
        "target": "eb5e450d-1673-401a-adf1-be1d331aa095",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "0e97d513-bcfa-4743-886a-43c0bba9a42d",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "0ded2e91-6c7a-4b3d-93e2-3d5d214ba616",
        "target": "c8cd6f23-395c-42f0-9785-1a6a67e804b0",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "06fba0bb-07bc-44b5-82ee-fd12c928a14a",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "eb5e450d-1673-401a-adf1-be1d331aa095",
        "target": "6630974f-54c4-4636-ba34-cff1e7c9b403",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "no",
        "targetHandle": "target"
      },
      {
        "id": "23fabd32-6f5b-4bc5-8380-a8ac532e7133",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "6630974f-54c4-4636-ba34-cff1e7c9b403",
        "target": "2a334cb4-972a-4dfd-8df7-11ac3d69ffaf",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "start-end"
      },
      {
        "id": "b17640c1-31ba-4b4b-9edb-1509004d414d",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "eb5e450d-1673-401a-adf1-be1d331aa095",
        "target": "3c62a729-6ae9-4e05-a89d-8ffaa19602b2",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "yes",
        "targetHandle": "target"
      },
      {
        "id": "3eb4e256-4753-4807-882a-3df5f0d0fd65",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "3c62a729-6ae9-4e05-a89d-8ffaa19602b2",
        "target": "19284cd0-ca3e-41b7-b62f-c5284f241a88",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "7d5b0f5d-efb5-496a-87e2-66d219a01bb6",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "19284cd0-ca3e-41b7-b62f-c5284f241a88",
        "target": "89c31888-846d-40f7-990e-57814de2d8ea",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "8bf6d608-b4d3-450d-8155-41cf4129258c",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "89c31888-846d-40f7-990e-57814de2d8ea",
        "target": "60b1687f-e153-41f3-8e64-dcc830352a75",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "no",
        "targetHandle": "start-end"
      },
      {
        "id": "b7205b98-8703-4d73-98da-2c406147b89e",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "89c31888-846d-40f7-990e-57814de2d8ea",
        "target": "2d7f2f26-9c70-42fa-8921-8b461b1bb46c",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "yes",
        "targetHandle": "target"
      },
      {
        "id": "bf91afe3-9fd7-44cb-8df9-8d44c969a006",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "2d7f2f26-9c70-42fa-8921-8b461b1bb46c",
        "target": "9d750b9a-5c75-4ad5-aac4-15355aae0df0",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "3c15f253-94c0-4eaa-b7d1-2e757930f1ac",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "9d750b9a-5c75-4ad5-aac4-15355aae0df0",
        "target": "52f0cc73-e66b-46c6-abbd-a53e7d917725",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "yes",
        "targetHandle": "target"
      },
      {
        "id": "96f23f57-b130-4dbb-8a5e-d49fd004b590",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "52f0cc73-e66b-46c6-abbd-a53e7d917725",
        "target": "6778787a-c08f-4429-91af-0c95547124fc",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "ccdbb3ba-349b-436d-802d-ac53c2a27527",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "6778787a-c08f-4429-91af-0c95547124fc",
        "target": "c2b4f861-d0db-4099-9a01-0fca6d6952d4",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "5eccedc8-94d2-413e-a4cc-f277434f6c10",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "9d750b9a-5c75-4ad5-aac4-15355aae0df0",
        "target": "e0bfbad7-1242-44ec-ba22-935e6d9c77e2",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "no",
        "targetHandle": "target"
      },
      {
        "id": "d93c263c-e12c-4abe-9af9-2df9ab66e158",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "e0bfbad7-1242-44ec-ba22-935e6d9c77e2",
        "target": "2faaa8e8-418a-44a5-9bed-54fa1b0222fa",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "target"
      },
      {
        "id": "184c8999-584e-4e7c-8ad6-58d1d95c4964",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "c2b4f861-d0db-4099-9a01-0fca6d6952d4",
        "target": "54529e3d-0ec4-4b97-8123-56c4374af394",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "start-end"
      },
      {
        "id": "2ca81d73-0f86-42f5-8ca9-369dbbf13c46",
        "type": "smoothstep",
        "style": {
          "stroke": "grey",
          "transition": "all 0.5s ease-in-out"
        },
        "source": "2faaa8e8-418a-44a5-9bed-54fa1b0222fa",
        "target": "09b23733-c894-4d84-adac-87e8e6ee88cc",
        "markerEnd": {
          "type": "arrowclosed",
          "color": "grey",
          "width": 20,
          "height": 20
        },
        "sourceHandle": "source",
        "targetHandle": "start-end"
      }
    ],
    "nodes": [
      {
        "id": "start",
        "data": {
          "type": "start",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "start",
        "dragging": false,
        "measured": {
          "width": 32,
          "height": 48
        },
        "position": {
          "x": 591.6060461669713,
          "y": -72.04715520412655
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "0ded2e91-6c7a-4b3d-93e2-3d5d214ba616",
        "data": {
          "type": "show-commands",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "show-commands",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 532.5996430466405,
          "y": 137.3973052649572
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "127a1d0e-215a-4dcf-b967-6932d749ad6b",
        "data": {
          "type": "commands",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false,
          "show_steps": [
            "show running-config | include ntp"
          ],
          "config_steps": [
            "ntp server {{ntp_ip}}",
            "ntp update-calender"
          ]
        },
        "type": "commands",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 532.5996430466403,
          "y": 35.54288935931065
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "c8cd6f23-395c-42f0-9785-1a6a67e804b0",
        "data": {
          "type": "job-report",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false,
          "reportData": [
            {
              "id": "91583784-618b-472f-bab1-1cfa0de14d1f",
              "job_id": "7f383b37-6a2f-4eec-b9a8-89b4dad527b8",
              "jobName": "job_30/5/2025 4:09:32 pm",
              "hostname": "cisco_cat8k_013.cml.com",
              "job_type": "Show Commands",
              "UserJobID": "7f383b37-6a2f-4eec-b9a8-89b4dad527b8",
              "ip_address": "192.168.85.13",
              "date_created": "Fri 30, May 2025, 04:09 PM",
              "data_dump_pre": null,
              "device_status": "Reachable",
              "data_dump_post": null,
              "data_dump_config": null,
              "authentication_status": "Succesful",
              "data_dump_show_commands": [
                {
                  "error": "False",
                  "command_name": "show running-config | include ntp",
                  "command_output": "No output received",
                  "command_status": "Success"
                }
              ]
            },
            {
              "id": "cc7da0f5-2c23-4be5-930b-e5890c1954bc",
              "job_id": "7f383b37-6a2f-4eec-b9a8-89b4dad527b8",
              "jobName": "job_30/5/2025 4:09:32 pm",
              "hostname": "cisco_cat8k_012.cml.com",
              "job_type": "Show Commands",
              "UserJobID": "7f383b37-6a2f-4eec-b9a8-89b4dad527b8",
              "ip_address": "192.168.85.12",
              "date_created": "Fri 30, May 2025, 04:09 PM",
              "data_dump_pre": null,
              "device_status": "Reachable",
              "data_dump_post": null,
              "data_dump_config": null,
              "authentication_status": "Succesful",
              "data_dump_show_commands": [
                {
                  "error": "False",
                  "command_name": "show running-config | include ntp",
                  "command_output": "No output received",
                  "command_status": "Success"
                }
              ]
            }
          ]
        },
        "type": "job-report",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 532.6902825227696,
          "y": 240.61077198324557
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "eb5e450d-1673-401a-adf1-be1d331aa095",
        "data": {
          "type": "decision",
          "error": false,
          "value": "",
          "script": "const configCommand = getVariable(\"configCommands\");\nconst showCommands = getVariable(\"showCommands\");\nconst ntpIp = getVariable(\"ntp_ip\");\nconst jobReportJsonData = getVariable(\"rawShowOutput\");\n\n// Replace vars with actual values\nconst configCommandOutput = configCommand.replace(/{{(.*?)}}/g, (_, varName) => getVariable(varName));\n\nconsole.log(\"Config Command: \", configCommandOutput);\nconsole.log(\"Show Commands: \", showCommands);\nconsole.log(\"Ntp Ip: \", ntpIp);\nconsole.log(\"Job Report JSON Data: \", jobReportJsonData);\n\nlet devicesToConfigure = {};\nlet allDevices = {};\nlet reportAvailable = true;\nlet resultList = {};\nlet errorList = {};\nerrorList.errors = [];\n\nif (\n  !jobReportJsonData ||\n  !jobReportJsonData ||\n  !Array.isArray(jobReportJsonData)\n) {\n  reportAvailable = false;\n  errorList.errors = [\"No report available\"];\n  console.error(\"Invalid JSON data format.\");\n} else {\n  jobReportJsonData.forEach((dataItem) => {\n    if (!dataItem) {\n      reportAvailable = false;\n      errorList.errors = [\"No data available\"];\n      return;\n    }\n\n    const deviceIP = dataItem.ip_address;\n    const reachability_status = dataItem.device_status === \"Reachable\";\n    let change_required = true;\n    let current_config = \"\";\n    let authentication = false;\n\n    if (dataItem.device_status === \"Reachable\") {\n      authentication = true;\n    }\n\n    allDevices[deviceIP] = true;\n\n    if (\n      !dataItem.data_dump_show_commands ||\n      !Array.isArray(dataItem.data_dump_show_commands) ||\n      dataItem.data_dump_show_commands.length < 1\n    ) {\n      change_required = null;\n      current_config = \"NA\";\n\n      resultList[deviceIP] = {\n        reachability_status,\n        authentication,\n        change_required,\n        current_config,\n      };\n\n      reportAvailable = false;\n      errorList.errors = [`No data available for ${deviceIP}`];\n      return;\n    }\n\n    let data_found = false;\n    let jobOutputNotAvailable = false;\n\n    dataItem.data_dump_show_commands.forEach((command) => {\n      if (\n        command &&\n        command.json_output &&\n        Array.isArray(command.json_output) &&\n        command.command_name === `${showCommands}`\n      ) {\n        const array = command.json_output;\n\n        for (let i = 0; i < array.length; i++) {\n          if (array[i].includes(ntpIp)) {\n            change_required = false;\n            data_found = true;\n            break;\n          }\n        }\n        current_config = command.command_output;\n      } else if (\n        command &&\n        command.error === \"False\" &&\n        command.command_status === \"Success\" &&\n        command.command_output === \"No output received\" &&\n        command.command_name === `${showCommands}`\n      ) {\n        change_required = true;\n        data_found = false;\n        current_config = command.command_output;\n      } else {\n        jobOutputNotAvailable = true;\n        change_required = null;\n        current_config = \"No output available\";\n        errorList.errors.push(`No output available for ${deviceIP}`);\n      }\n    });\n\n    resultList[deviceIP] = {\n      reachability_status,\n      authentication,\n      change_required,\n      current_config,\n    };\n\n    if (!data_found && !jobOutputNotAvailable) {\n      devicesToConfigure[deviceIP] = true;\n      resultList[deviceIP][\"config_command\"] = configCommandOutput;\n      resultList[deviceIP][\"show_command\"] = showCommands;\n    } else {\n      resultList[deviceIP][\"config_command\"] = \"NA\";\n    }\n  });\n}\n\nsetVariable(\"expectedConfigData\", resultList);\n\nconsole.log(\"Devices to configure: \", devicesToConfigure);\nconsole.log(\"All devices: \", allDevices);\nconsole.log(\"Report available: \", reportAvailable);\nconsole.log(\"Result list: \", resultList);\nconsole.log(\"Error list: \", errorList);\nconsole.log(\"Move Further: \", Object.keys(devicesToConfigure).length > 0);\n\nreturn Object.keys(devicesToConfigure).length > 0;",
          "success": false,
          "isLoading": false
        },
        "type": "decision",
        "dragging": false,
        "measured": {
          "width": 48,
          "height": 48
        },
        "position": {
          "x": 582.8541193284602,
          "y": 343.3925120092656
        },
        "selected": true,
        "resizable": false
      },
      {
        "id": "6630974f-54c4-4636-ba34-cff1e7c9b403",
        "data": {
          "type": "process",
          "error": false,
          "value": "",
          "script": "/*\nAvailable Context:\n- handleError(error): Handle an error by displaying a snackbar message.\n- setVariable(name, value): Set a variable with the given name and value.\n- getVariable(name): Get the value of a variable with the given name.\n- clearVariables(): Clear all variables.\n- result: This variable contains the returned value from previous node.\n\nExample:\n  setVariable('exampleVar', 'exampleValue');\n  const value = getVariable('exampleVar');\n  if (value) {\n    console.log(value)\n  } else {\n    handleError('Variable not found');\n  }\n*/\n\n// Run your code here\nconst allNoOutput = getVariable(\"allNoOutput\")\n\nif (allNoOutput) {\n  handleError(\"No Data Found\")\n} else {\n  handleError(\"Configuration already exists\")\n}\n",
          "success": false,
          "isLoading": false
        },
        "type": "process",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 674.0933568574081,
          "y": 416.0655619454937
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "2a334cb4-972a-4dfd-8df7-11ac3d69ffaf",
        "data": {
          "type": "end",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "end",
        "dragging": false,
        "measured": {
          "width": 32,
          "height": 48
        },
        "position": {
          "x": 732.2900789739547,
          "y": 525.9989123808293
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "3c62a729-6ae9-4e05-a89d-8ffaa19602b2",
        "data": {
          "type": "ai-opinion",
          "error": false,
          "value": "",
          "success": false,
          "aiOpinion": "{\"Problem_Found\":\"The NTP server is set to a specific IP address which may not be reachable or may not provide correct time information if it's down or misconfigured.\",\"Category\":\"Time Synchronization\",\"Outage_Potentials\":{\"Data_Plane\":false,\"Control_Plane\":true},\"Possible_Solution\":\"Verify the reachability and configuration of the NTP server; consider using multiple NTP servers for redundancy.\"}",
          "isLoading": false
        },
        "type": "ai-opinion",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 408.3277736418985,
          "y": 421.2061310787739
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "19284cd0-ca3e-41b7-b62f-c5284f241a88",
        "data": {
          "type": "expected-config",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "expected-config",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 409.2062294348275,
          "y": 528.850861580574
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "89c31888-846d-40f7-990e-57814de2d8ea",
        "data": {
          "type": "boolean-box",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false,
          "variableNodeType": "expected-config"
        },
        "type": "boolean-box",
        "dragging": false,
        "measured": {
          "width": 48,
          "height": 48
        },
        "position": {
          "x": 461.1673448042071,
          "y": 642.0261167592379
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "60b1687f-e153-41f3-8e64-dcc830352a75",
        "data": {
          "type": "end",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "end",
        "dragging": false,
        "measured": {
          "width": 32,
          "height": 48
        },
        "position": {
          "x": 565.2550440359591,
          "y": 711.2169644422812
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "2d7f2f26-9c70-42fa-8921-8b461b1bb46c",
        "data": {
          "type": "multi-config",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "multi-config",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 317.2904276299554,
          "y": 714.9315589756893
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "9d750b9a-5c75-4ad5-aac4-15355aae0df0",
        "data": {
          "type": "decision",
          "error": false,
          "value": "",
          "script": "const finalConfigOutput = getVariable(\"finalConfigOutput\");\nconst ntpIp = getVariable(\"ntp_ip\");\n\nlet devicesToConfigure = {};\nlet allDevices = {};\nlet reportAvailable = true;\nlet resultList = {};\nlet errorList = {};\nerrorList.errors = [];\n\nfor (const [deviceIP, jobOutput] of Object.entries(finalConfigOutput)) {\n  if (!jobOutput) {\n    reportAvailable = false;\n    errorList.errors = [\"No data available\"];\n    continue;\n  }\n  const showCommand = jobOutput.show_command;\n  const jobReportJsonData = jobOutput.job_report;\n\n  if (\n    !jobReportJsonData ||\n    !jobReportJsonData ||\n    !Array.isArray(jobReportJsonData)\n  ) {\n    reportAvailable = false;\n    errorList.errors = [\"No report available\"];\n  } else {\n    jobReportJsonData.forEach((dataItem) => {\n      if (!dataItem) {\n        reportAvailable = false;\n        return;\n      }\n\n      const deviceIp = dataItem.ip_address;\n      const reachabilityStatus = dataItem.device_status === \"Reachable\";\n      let changeRequired = true;\n      let currentConfig = \"\";\n      let authentication = false;\n\n      if (dataItem.device_status === \"Reachable\") {\n        authentication = true;\n      }\n\n      allDevices[deviceIp] = true;\n\n      if (\n        !dataItem.data_dump_post ||\n        !Array.isArray(dataItem.data_dump_post) ||\n        dataItem.data_dump_post.length < 1\n      ) {\n        changeRequired = null;\n        currentConfig = \"NA\";\n\n        resultList[deviceIp] = {\n          reachability_status: reachabilityStatus,\n          authentication: authentication,\n          change_required: changeRequired,\n          current_config: currentConfig,\n        };\n\n        reportAvailable = false;\n        errorList.errors = [`No data available for ${deviceIp}`];\n        return;\n      }\n\n      let dataFound = false;\n      let jobOutputNotAvailable = false;\n\n      dataItem.data_dump_post.forEach((command) => {\n        if (\n          command &&\n          command.json_output &&\n          Array.isArray(command.json_output) &&\n          command.command_name === `${showCommand}`\n        ) {\n          const array = command.json_output;\n\n          for (let i = 0; i < array.length; i++) {\n            if (array[i].includes(ntpIp)) {\n              dataFound = true;\n              changeRequired = false;\n              break;\n            } else {\n              changeRequired = true;\n            }\n          }\n\n          currentConfig = command.command_output;\n        } else {\n          changeRequired = null;\n          jobOutputNotAvailable = true;\n          currentConfig = \"No output available\";\n          errorList.errors.push(`No output available for ${deviceIp}`);\n        }\n      });\n      \n      if (!dataFound && !jobOutputNotAvailable) {\n        devicesToConfigure[deviceIp] = true;\n      }\n\n      resultList[deviceIp] = {\n        reachability_status: reachabilityStatus,\n        authentication: authentication,\n        change_required: changeRequired,\n        current_config: currentConfig,\n      };\n    });\n  }\n}\n\nfunction formatResultListForEmail(resultList) {\n  let html = `\n    <h2>Device Configuration Report</h2>\n    <table border=\"1\" cellpadding=\"6\" cellspacing=\"0\" style=\"border-collapse: collapse; font-family: Arial, sans-serif;\">\n      <thead>\n        <tr style=\"background-color: #f2f2f2;\">\n          <th>Device IP</th>\n          <th>Reachability</th>\n          <th>Authenticated</th>\n          <th>Change Required</th>\n          <th>Current Config</th>\n        </tr>\n      </thead>\n      <tbody>\n  `;\n\n  for (const [ip, data] of Object.entries(resultList)) {\n    html += `\n      <tr>\n        <td>${ip}</td>\n        <td>${data.reachability_status ? \"Yes\" : \"No\"}</td>\n        <td>${data.authentication ? \"Yes\" : \"No\"}</td>\n        <td>${data.change_required === null\n        ? \"Unknown\"\n        : data.change_required\n          ? \"Yes\"\n          : \"No\"\n      }</td>\n        <td><pre style=\"white-space: pre-wrap; max-width: 600px;\">${data.current_config\n      }</pre></td>\n      </tr>\n    `;\n  }\n\n  html += `\n      </tbody>\n    </table>\n  `;\n\n  return html;\n}\n\nfunction formatResultListPlainText(resultList) {\n  let text = \"Device Configuration Report\\n\\n\";\n\n  for (const [ip, data] of Object.entries(resultList)) {\n    text += `Device IP: ${ip}\n  Reachable: ${data.reachability_status ? \"Yes\" : \"No\"}\n  Authenticated: ${data.authentication ? \"Yes\" : \"No\"}\n  Change Required: ${data.change_required === null\n        ? \"Unknown\"\n        : data.change_required\n          ? \"Yes\"\n          : \"No\"\n      }\n  Current Config:\n${data.current_config}\n------------------------------------------------------------\n`;\n  }\n\n  return text;\n}\n\nconst itsmWorknotesBody = formatResultListPlainText(resultList);\nconst emailBody = formatResultListForEmail(resultList);\n\nsetVariable(\"itsmWorknotesOutput\", itsmWorknotesBody);\nsetVariable(\"plainTextOutput\", emailBody);\n\nreturn (\n  Object.keys(devicesToConfigure).length !== Object.keys(allDevices).length\n);\n",
          "success": false,
          "isLoading": false
        },
        "type": "decision",
        "dragging": false,
        "measured": {
          "width": 48,
          "height": 48
        },
        "position": {
          "x": 368.14069492618256,
          "y": 828.8277066839221
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "e0bfbad7-1242-44ec-ba22-935e6d9c77e2",
        "data": {
          "type": "mail",
          "error": false,
          "value": "",
          "message": "{{plainTextOutput}}",
          "payload": {
            "message": "{{plainTextOutput}}",
            "subject": "Cisco IOS Add NTP Workflow Report",
            "email_group": "5f8d4b50-3b66-4c0e-ba1d-e06b1edb3519"
          },
          "subject": "Cisco IOS Add NTP Workflow Report",
          "success": false,
          "isLoading": false,
          "email_group": {
            "id": "5f8d4b50-3b66-4c0e-ba1d-e06b1edb3519",
            "group_name": "Default",
            "is_deleted": false
          }
        },
        "type": "mail",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 461.04472466225707,
          "y": 880.4258325289737
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "2faaa8e8-418a-44a5-9bed-54fa1b0222fa",
        "data": {
          "type": "itsm-worknotes",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false,
          "event_type": "Change",
          "work_notes": "{{itsmWorknotesOutput}}"
        },
        "type": "itsm-worknotes",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 462.46460036307053,
          "y": 987.4387586283051
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "c2b4f861-d0db-4099-9a01-0fca6d6952d4",
        "data": {
          "type": "itsm-worknotes",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false,
          "event_type": "Change",
          "work_notes": "{{itsmWorknotesOutput}}"
        },
        "type": "itsm-worknotes",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 187.68116168406027,
          "y": 1101.6088077337656
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "52f0cc73-e66b-46c6-abbd-a53e7d917725",
        "data": {
          "type": "configuration-output",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false,
          "reportData": {
            "192.168.85.12": {
              "device_ip": "192.168.85.12",
              "job_report": [
                {
                  "id": "3381d3a8-1255-444d-8867-6a7d089808ef",
                  "job_id": "a4918824-ca20-46cf-b1b6-4a55aeb421c2",
                  "jobName": "CHG0030002_30/5/2025 4:10:18 pm_config",
                  "hostname": "cisco_cat8k_012.cml.com",
                  "job_type": "Configuration",
                  "UserJobID": "a4918824-ca20-46cf-b1b6-4a55aeb421c2",
                  "ip_address": "192.168.85.12",
                  "date_created": "Fri 30, May 2025, 04:10 PM",
                  "data_dump_pre": [
                    {
                      "error": "False",
                      "command_name": "show running-config | include ntp",
                      "command_output": "No output received",
                      "command_status": "Success"
                    }
                  ],
                  "device_status": "Reachable",
                  "command_output": "",
                  "data_dump_post": [
                    {
                      "error": "False",
                      "json_output": [
                        "ntp server 192.168.10.163"
                      ],
                      "command_name": "show running-config | include ntp",
                      "command_output": "ntp server 192.168.10.163",
                      "command_status": "Success"
                    }
                  ],
                  "data_dump_config": [
                    {
                      "command_name": [
                        "ntp server 192.168.10.163",
                        "ntp update-calender"
                      ],
                      "command_output": "configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\ncisco_cat8k_012(config)#ntp server 192.168.10.163\ncisco_cat8k_012(config)#ntp update-calender\n                                         ^\n% Invalid input detected at '^' marker.\n\ncisco_cat8k_012(config)#end\ncisco_cat8k_012#",
                      "command_status": "Success"
                    }
                  ],
                  "authentication_status": "Succesful",
                  "data_dump_show_commands": null
                }
              ],
              "show_command": "show running-config | include ntp",
              "authentication": true,
              "config_command": "ntp server 192.168.10.163;ntp update-calender",
              "current_config": "No output received",
              "change_required": true,
              "device_group_id": "bbbe5638-f5f3-4351-be2f-4d500c2a0e07",
              "config_template_id": "299f884d-aec9-42ab-9cad-ef3d16c7cf60",
              "reachability_status": true
            },
            "192.168.85.13": {
              "device_ip": "192.168.85.13",
              "job_report": [
                {
                  "id": "3b134757-29c9-4210-a018-f63f24014809",
                  "job_id": "111a4d56-e9d9-493e-976b-6ea8e6e2597e",
                  "jobName": "CHG0030002_30/5/2025 4:10:18 pm_config",
                  "hostname": "cisco_cat8k_013.cml.com",
                  "job_type": "Configuration",
                  "UserJobID": "111a4d56-e9d9-493e-976b-6ea8e6e2597e",
                  "ip_address": "192.168.85.13",
                  "date_created": "Fri 30, May 2025, 04:10 PM",
                  "data_dump_pre": [
                    {
                      "error": "False",
                      "command_name": "show running-config | include ntp",
                      "command_output": "No output received",
                      "command_status": "Success"
                    }
                  ],
                  "device_status": "Reachable",
                  "command_output": "",
                  "data_dump_post": [
                    {
                      "error": "False",
                      "json_output": [
                        "ntp server 192.168.10.163"
                      ],
                      "command_name": "show running-config | include ntp",
                      "command_output": "ntp server 192.168.10.163",
                      "command_status": "Success"
                    }
                  ],
                  "data_dump_config": [
                    {
                      "command_name": [
                        "ntp server 192.168.10.163",
                        "ntp update-calender"
                      ],
                      "command_output": "configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\ncisco_cat8k_013(config)#ntp server 192.168.10.163\ncisco_cat8k_013(config)#ntp update-calender\n                                         ^\n% Invalid input detected at '^' marker.\n\ncisco_cat8k_013(config)#end\ncisco_cat8k_013#",
                      "command_status": "Success"
                    }
                  ],
                  "authentication_status": "Succesful",
                  "data_dump_show_commands": null
                }
              ],
              "show_command": "show running-config | include ntp",
              "authentication": true,
              "config_command": "ntp server 192.168.10.163;ntp update-calender",
              "current_config": "No output received",
              "change_required": true,
              "device_group_id": "155ac02d-09d9-4005-83cb-292437384046",
              "config_template_id": "e2a8a3d4-f766-4d83-be94-80e544273de2",
              "reachability_status": true
            }
          }
        },
        "type": "configuration-output",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 187.91355396428378,
          "y": 882.7465050008517
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "6778787a-c08f-4429-91af-0c95547124fc",
        "data": {
          "type": "mail",
          "error": false,
          "value": "",
          "message": "{{plainTextOutput}}",
          "payload": {
            "message": "{{plainTextOutput}}",
            "subject": "Cisco IOS Add NTP Workflow Report",
            "email_group": "5f8d4b50-3b66-4c0e-ba1d-e06b1edb3519"
          },
          "subject": "Cisco IOS Add NTP Workflow Report",
          "success": false,
          "isLoading": false,
          "email_group": {
            "id": "5f8d4b50-3b66-4c0e-ba1d-e06b1edb3519",
            "group_name": "Default",
            "is_deleted": false
          }
        },
        "type": "mail",
        "dragging": false,
        "measured": {
          "width": 150,
          "height": 50
        },
        "position": {
          "x": 188.3941489839965,
          "y": 991.6596468391641
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "54529e3d-0ec4-4b97-8123-56c4374af394",
        "data": {
          "type": "end",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "end",
        "dragging": false,
        "measured": {
          "width": 32,
          "height": 48
        },
        "position": {
          "x": 246.29155503308903,
          "y": 1201.635164986858
        },
        "selected": false,
        "resizable": false
      },
      {
        "id": "09b23733-c894-4d84-adac-87e8e6ee88cc",
        "data": {
          "type": "end",
          "error": false,
          "value": "",
          "success": false,
          "isLoading": false
        },
        "type": "end",
        "dragging": false,
        "measured": {
          "width": 32,
          "height": 48
        },
        "position": {
          "x": 522.3719228429908,
          "y": 1102.393520926413
        },
        "selected": false,
        "resizable": false
      }
    ],
    "viewport": {
      "x": 210.86736284646804,
      "y": -182.79951354968574,
      "zoom": 0.7169776240079133
    }
  },
  "config_flow": true,
  "workflow_type": "change",
  "metadata": {
    "tags": [
      "NTP",
      "NTP server",
      "show running-config | include ntp",
      "NTP configuration",
      "Network Time Protocol"
    ],
    "type": "change",
    "device": "EOS",
    "vendor": "Arista"
  }
}